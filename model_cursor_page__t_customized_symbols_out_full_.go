/*
tradewatch.io

Financial market data for Developers

API version: 3.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tradewatch

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CursorPageTCustomizedSymbolsOutFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CursorPageTCustomizedSymbolsOutFull{}

// CursorPageTCustomizedSymbolsOutFull struct for CursorPageTCustomizedSymbolsOutFull
type CursorPageTCustomizedSymbolsOutFull struct {
	Items []SymbolsOutFull `json:"items"`
	Total NullableInt32 `json:"total,omitempty"`
	CurrentPage NullableString `json:"current_page,omitempty"`
	CurrentPageBackwards NullableString `json:"current_page_backwards,omitempty"`
	PreviousPage NullableString `json:"previous_page,omitempty"`
	NextPage NullableString `json:"next_page,omitempty"`
}

type _CursorPageTCustomizedSymbolsOutFull CursorPageTCustomizedSymbolsOutFull

// NewCursorPageTCustomizedSymbolsOutFull instantiates a new CursorPageTCustomizedSymbolsOutFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPageTCustomizedSymbolsOutFull(items []SymbolsOutFull) *CursorPageTCustomizedSymbolsOutFull {
	this := CursorPageTCustomizedSymbolsOutFull{}
	this.Items = items
	return &this
}

// NewCursorPageTCustomizedSymbolsOutFullWithDefaults instantiates a new CursorPageTCustomizedSymbolsOutFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPageTCustomizedSymbolsOutFullWithDefaults() *CursorPageTCustomizedSymbolsOutFull {
	this := CursorPageTCustomizedSymbolsOutFull{}
	return &this
}

// GetItems returns the Items field value
func (o *CursorPageTCustomizedSymbolsOutFull) GetItems() []SymbolsOutFull {
	if o == nil {
		var ret []SymbolsOutFull
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) GetItemsOk() ([]SymbolsOutFull, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CursorPageTCustomizedSymbolsOutFull) SetItems(v []SymbolsOutFull) {
	o.Items = v
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPageTCustomizedSymbolsOutFull) GetTotal() int32 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret int32
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPageTCustomizedSymbolsOutFull) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableInt32 and assigns it to the Total field.
func (o *CursorPageTCustomizedSymbolsOutFull) SetTotal(v int32) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) UnsetTotal() {
	o.Total.Unset()
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPageTCustomizedSymbolsOutFull) GetCurrentPage() string {
	if o == nil || IsNil(o.CurrentPage.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentPage.Get()
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPageTCustomizedSymbolsOutFull) GetCurrentPageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentPage.Get(), o.CurrentPage.IsSet()
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) HasCurrentPage() bool {
	if o != nil && o.CurrentPage.IsSet() {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given NullableString and assigns it to the CurrentPage field.
func (o *CursorPageTCustomizedSymbolsOutFull) SetCurrentPage(v string) {
	o.CurrentPage.Set(&v)
}
// SetCurrentPageNil sets the value for CurrentPage to be an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) SetCurrentPageNil() {
	o.CurrentPage.Set(nil)
}

// UnsetCurrentPage ensures that no value is present for CurrentPage, not even an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) UnsetCurrentPage() {
	o.CurrentPage.Unset()
}

// GetCurrentPageBackwards returns the CurrentPageBackwards field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPageTCustomizedSymbolsOutFull) GetCurrentPageBackwards() string {
	if o == nil || IsNil(o.CurrentPageBackwards.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentPageBackwards.Get()
}

// GetCurrentPageBackwardsOk returns a tuple with the CurrentPageBackwards field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPageTCustomizedSymbolsOutFull) GetCurrentPageBackwardsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentPageBackwards.Get(), o.CurrentPageBackwards.IsSet()
}

// HasCurrentPageBackwards returns a boolean if a field has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) HasCurrentPageBackwards() bool {
	if o != nil && o.CurrentPageBackwards.IsSet() {
		return true
	}

	return false
}

// SetCurrentPageBackwards gets a reference to the given NullableString and assigns it to the CurrentPageBackwards field.
func (o *CursorPageTCustomizedSymbolsOutFull) SetCurrentPageBackwards(v string) {
	o.CurrentPageBackwards.Set(&v)
}
// SetCurrentPageBackwardsNil sets the value for CurrentPageBackwards to be an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) SetCurrentPageBackwardsNil() {
	o.CurrentPageBackwards.Set(nil)
}

// UnsetCurrentPageBackwards ensures that no value is present for CurrentPageBackwards, not even an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) UnsetCurrentPageBackwards() {
	o.CurrentPageBackwards.Unset()
}

// GetPreviousPage returns the PreviousPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPageTCustomizedSymbolsOutFull) GetPreviousPage() string {
	if o == nil || IsNil(o.PreviousPage.Get()) {
		var ret string
		return ret
	}
	return *o.PreviousPage.Get()
}

// GetPreviousPageOk returns a tuple with the PreviousPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPageTCustomizedSymbolsOutFull) GetPreviousPageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousPage.Get(), o.PreviousPage.IsSet()
}

// HasPreviousPage returns a boolean if a field has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) HasPreviousPage() bool {
	if o != nil && o.PreviousPage.IsSet() {
		return true
	}

	return false
}

// SetPreviousPage gets a reference to the given NullableString and assigns it to the PreviousPage field.
func (o *CursorPageTCustomizedSymbolsOutFull) SetPreviousPage(v string) {
	o.PreviousPage.Set(&v)
}
// SetPreviousPageNil sets the value for PreviousPage to be an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) SetPreviousPageNil() {
	o.PreviousPage.Set(nil)
}

// UnsetPreviousPage ensures that no value is present for PreviousPage, not even an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) UnsetPreviousPage() {
	o.PreviousPage.Unset()
}

// GetNextPage returns the NextPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CursorPageTCustomizedSymbolsOutFull) GetNextPage() string {
	if o == nil || IsNil(o.NextPage.Get()) {
		var ret string
		return ret
	}
	return *o.NextPage.Get()
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CursorPageTCustomizedSymbolsOutFull) GetNextPageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPage.Get(), o.NextPage.IsSet()
}

// HasNextPage returns a boolean if a field has been set.
func (o *CursorPageTCustomizedSymbolsOutFull) HasNextPage() bool {
	if o != nil && o.NextPage.IsSet() {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given NullableString and assigns it to the NextPage field.
func (o *CursorPageTCustomizedSymbolsOutFull) SetNextPage(v string) {
	o.NextPage.Set(&v)
}
// SetNextPageNil sets the value for NextPage to be an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) SetNextPageNil() {
	o.NextPage.Set(nil)
}

// UnsetNextPage ensures that no value is present for NextPage, not even an explicit nil
func (o *CursorPageTCustomizedSymbolsOutFull) UnsetNextPage() {
	o.NextPage.Unset()
}

func (o CursorPageTCustomizedSymbolsOutFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CursorPageTCustomizedSymbolsOutFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	if o.CurrentPage.IsSet() {
		toSerialize["current_page"] = o.CurrentPage.Get()
	}
	if o.CurrentPageBackwards.IsSet() {
		toSerialize["current_page_backwards"] = o.CurrentPageBackwards.Get()
	}
	if o.PreviousPage.IsSet() {
		toSerialize["previous_page"] = o.PreviousPage.Get()
	}
	if o.NextPage.IsSet() {
		toSerialize["next_page"] = o.NextPage.Get()
	}
	return toSerialize, nil
}

func (o *CursorPageTCustomizedSymbolsOutFull) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCursorPageTCustomizedSymbolsOutFull := _CursorPageTCustomizedSymbolsOutFull{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCursorPageTCustomizedSymbolsOutFull)

	if err != nil {
		return err
	}

	*o = CursorPageTCustomizedSymbolsOutFull(varCursorPageTCustomizedSymbolsOutFull)

	return err
}

type NullableCursorPageTCustomizedSymbolsOutFull struct {
	value *CursorPageTCustomizedSymbolsOutFull
	isSet bool
}

func (v NullableCursorPageTCustomizedSymbolsOutFull) Get() *CursorPageTCustomizedSymbolsOutFull {
	return v.value
}

func (v *NullableCursorPageTCustomizedSymbolsOutFull) Set(val *CursorPageTCustomizedSymbolsOutFull) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPageTCustomizedSymbolsOutFull) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPageTCustomizedSymbolsOutFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPageTCustomizedSymbolsOutFull(val *CursorPageTCustomizedSymbolsOutFull) *NullableCursorPageTCustomizedSymbolsOutFull {
	return &NullableCursorPageTCustomizedSymbolsOutFull{value: val, isSet: true}
}

func (v NullableCursorPageTCustomizedSymbolsOutFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPageTCustomizedSymbolsOutFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


